// <auto-generated />
using System;
using Dashboard.DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dashboard.DataAccess.Data.Migrations
{
    [DbContext(typeof(WebbanhangDbContext))]
    [Migration("20250819092144_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.19")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Branch", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Manager")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("manager");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__branches__3213E83F228C5BCB");

                    b.ToTable("branches");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.BranchExpense", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("amount");

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date")
                        .HasColumnName("end_date");

                    b.Property<string>("ExpenseType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("expense_type");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("PaymentCycle")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("MONTHLY")
                        .HasColumnName("payment_cycle");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date")
                        .HasColumnName("start_date");

                    b.HasKey("Id")
                        .HasName("PK__branch_e__3213E83F9C2D1119");

                    b.HasIndex("BranchId");

                    b.ToTable("branch_expenses");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.BranchIngredientInventory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__branch_i__3213E83F4191B3B5");

                    b.HasIndex("BranchId");

                    b.HasIndex("IngredientId");

                    b.ToTable("branch_ingredient_inventory");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Category", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__categori__3213E83F650E2080");

                    b.ToTable("categories");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Customer", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("fullname");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__customer__3213E83F7FAC9DFD");

                    b.ToTable("customers");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.DeliveryStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__delivery__3213E83FA692EDBC");

                    b.ToTable("delivery_statuses");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("full_name");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date")
                        .HasColumnName("hire_date");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.Property<string>("Position")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("position");

                    b.Property<DateOnly?>("ResignDate")
                        .HasColumnType("date")
                        .HasColumnName("resign_date");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("ACTIVE")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__employee__3213E83F62A64C81");

                    b.HasIndex("BranchId");

                    b.ToTable("employees");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.EmployeeSalary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Allowance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("allowance");

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("base_salary");

                    b.Property<decimal?>("Bonus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("bonus");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateOnly>("EffectiveDate")
                        .HasColumnType("date")
                        .HasColumnName("effective_date");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<decimal?>("Penalty")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("penalty");

                    b.Property<string>("SalaryType")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("MONTHLY")
                        .HasColumnName("salary_type");

                    b.Property<decimal?>("TaxRate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18, 2)")
                        .HasDefaultValue(0.1m)
                        .HasColumnName("tax_rate");

                    b.HasKey("Id")
                        .HasName("PK__employee__3213E83F55211C0A");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_salaries");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.EmployeeShift", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time")
                        .HasColumnName("end_time");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<DateOnly>("ShiftDate")
                        .HasColumnType("date")
                        .HasColumnName("shift_date");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time")
                        .HasColumnName("start_time");

                    b.Property<string>("Status")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasDefaultValue("PRESENT")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__employee__3213E83FADEFFA2B");

                    b.HasIndex("EmployeeId");

                    b.ToTable("employee_shifts");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ExpensesSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("ExpenseAfterTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("expense_after_tax");

                    b.Property<decimal>("ExpenseBeforeTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("expense_before_tax");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_type");

                    b.Property<string>("PeriodValue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_value");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tax_amount");

                    b.Property<int>("TotalIngredients")
                        .HasColumnType("int")
                        .HasColumnName("total_ingredients");

                    b.Property<int>("TotalPurchaseOrders")
                        .HasColumnType("int")
                        .HasColumnName("total_purchase_orders");

                    b.HasKey("Id")
                        .HasName("PK__expenses__3213E83F847BC26B");

                    b.ToTable("expenses_summary");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Ingredient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<long?>("TaxId")
                        .HasColumnType("bigint")
                        .HasColumnName("tax_id");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83F3CE86B2E");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaxId");

                    b.ToTable("ingredients");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83F6A754175");

                    b.ToTable("IngredientCategories");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrder", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("order_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long?>("SupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("supplier_id");

                    b.Property<decimal?>("TotalMoney")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_money");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83F762D28A7");

                    b.HasIndex("SupplierId");

                    b.ToTable("ingredient_purchase_orders");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<long>("PurchaseOrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("purchase_order_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.Property<decimal>("TaxPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tax_price");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_price");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("unit_price");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83FD6072415");

                    b.HasIndex("IngredientId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("ingredient_purchase_order_details");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientTransfer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83F4CF0E1E6");

                    b.HasIndex("BranchId");

                    b.HasIndex("IngredientId");

                    b.ToTable("ingredient_transfers");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientWarehouse", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__ingredie__3213E83F724F0268");

                    b.HasIndex("IngredientId");

                    b.ToTable("ingredient_warehouse");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customer_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<long?>("PaymentMethodId")
                        .HasColumnType("bigint")
                        .HasColumnName("payment_method_id");

                    b.Property<long?>("PaymentStatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("payment_status_id");

                    b.Property<string>("ShippingAddress")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("shipping_address");

                    b.Property<DateTime?>("ShippingDate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("shipping_date");

                    b.Property<string>("ShippingMethod")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("shipping_method");

                    b.Property<long?>("StatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("status_id");

                    b.Property<decimal?>("TotalMoney")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_money");

                    b.HasKey("Id")
                        .HasName("PK__orders__3213E83F9CC372E1");

                    b.HasIndex("BranchId");

                    b.HasIndex("CustomerId");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.OrderDeliveryTracking", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<long?>("DeliveryPersonId")
                        .HasColumnType("bigint")
                        .HasColumnName("delivery_person_id");

                    b.Property<DateTime?>("EstimatedDelivery")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("estimated_delivery");

                    b.Property<DateTime>("LastModified")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<string>("Location")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<long?>("ShippingProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("shipping_provider_id");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint")
                        .HasColumnName("status_id");

                    b.Property<string>("TrackingNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tracking_number");

                    b.HasKey("Id")
                        .HasName("PK__order_de__3213E83FE5070075");

                    b.HasIndex("DeliveryPersonId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ShippingProviderId");

                    b.HasIndex("StatusId");

                    b.ToTable("order_delivery_tracking");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.OrderDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("color");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<int>("NumberOfProducts")
                        .HasColumnType("int")
                        .HasColumnName("number_of_products");

                    b.Property<long?>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("order_id");

                    b.Property<float>("Price")
                        .HasColumnType("real")
                        .HasColumnName("price");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<float>("TotalMoney")
                        .HasColumnType("real")
                        .HasColumnName("total_money");

                    b.HasKey("Id")
                        .HasName("PK__order_de__3213E83F619D82EA");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("order_details");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.OrderStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__order_st__3213E83F5808452C");

                    b.ToTable("order_statuses");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.PaymentMethod", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__payment___3213E83F30F0438C");

                    b.ToTable("payment_methods");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.PaymentStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("status");

                    b.HasKey("Id")
                        .HasName("PK__payment___3213E83F1777CE46");

                    b.ToTable("payment_statuses");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Payroll", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal?>("Allowance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("allowance");

                    b.Property<decimal?>("BaseSalary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("base_salary");

                    b.Property<decimal?>("Bonus")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("bonus");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<long>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    b.Property<decimal?>("GrossSalary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("gross_salary");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<int>("Month")
                        .HasColumnType("int")
                        .HasColumnName("month");

                    b.Property<decimal?>("NetSalary")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("net_salary");

                    b.Property<decimal?>("Penalty")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("penalty");

                    b.Property<decimal?>("TaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tax_amount");

                    b.Property<decimal?>("TotalWorkingHours")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("total_working_hours");

                    b.Property<int>("Year")
                        .HasColumnType("int")
                        .HasColumnName("year");

                    b.HasKey("Id")
                        .HasName("PK__payrolls__3213E83FF57EF7CF");

                    b.HasIndex("EmployeeId");

                    b.ToTable("payrolls");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("CategoryId")
                        .HasColumnType("bigint")
                        .HasColumnName("category_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<long?>("TaxId")
                        .HasColumnType("bigint")
                        .HasColumnName("tax_id");

                    b.Property<string>("Thumbnail")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("thumbnail");

                    b.HasKey("Id")
                        .HasName("PK__products__3213E83F6A754175");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TaxId");

                    b.ToTable("products");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ProductImage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(300)
                        .IsUnicode(false)
                        .HasColumnType("varchar(300)")
                        .HasColumnName("image_url");

                    b.Property<long?>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.HasKey("Id")
                        .HasName("PK__product___3213E83F711F91E7");

                    b.HasIndex("ProductId");

                    b.ToTable("product_images");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ProductRecipe", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<long>("ProductId")
                        .HasColumnType("bigint")
                        .HasColumnName("product_id");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("quantity");

                    b.HasKey("Id")
                        .HasName("PK__product___3213E83FBB161C8F");

                    b.HasIndex("IngredientId");

                    b.HasIndex("ProductId");

                    b.ToTable("product_recipes");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ProfitSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("ExpenseAfterTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("expense_after_tax");

                    b.Property<decimal>("ExpenseBeforeTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("expense_before_tax");

                    b.Property<decimal>("InputTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("input_tax");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<decimal>("OutputTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("output_tax");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_type");

                    b.Property<string>("PeriodValue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_value");

                    b.Property<decimal>("ProfitAfterTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("profit_after_tax");

                    b.Property<decimal>("ProfitBeforeTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("profit_before_tax");

                    b.Property<decimal>("RevenueAfterTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("revenue_after_tax");

                    b.Property<decimal>("RevenueBeforeTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("revenue_before_tax");

                    b.Property<decimal>("VatToPay")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("vat_to_pay");

                    b.HasKey("Id")
                        .HasName("PK__profit_s__3213E83FB3B36FC9");

                    b.ToTable("profit_summary");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Role", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__roles__3213E83F1579A6F1");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.SalesSummary", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long?>("BranchId")
                        .HasColumnType("bigint")
                        .HasColumnName("branch_id");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("PeriodType")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_type");

                    b.Property<string>("PeriodValue")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("period_value");

                    b.Property<decimal>("RevenueAfterTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("revenue_after_tax");

                    b.Property<decimal>("RevenueBeforeTax")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("revenue_before_tax");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("tax_amount");

                    b.Property<int>("TotalOrders")
                        .HasColumnType("int")
                        .HasColumnName("total_orders");

                    b.Property<int>("TotalProducts")
                        .HasColumnType("int")
                        .HasColumnName("total_products");

                    b.HasKey("Id")
                        .HasName("PK__sales_su__3213E83F44A784A9");

                    b.ToTable("sales_summary");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ShippingProvider", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApiEndpoint")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("api_endpoint");

                    b.Property<string>("ContactInfo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("contact_info");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("PK__shipping__3213E83FA8D871A4");

                    b.ToTable("shipping_providers");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.SocialAccount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("email");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("provider");

                    b.Property<long>("ProviderId")
                        .HasColumnType("bigint")
                        .HasColumnName("provider_id");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__social_a__3213E83F2A02110D");

                    b.HasIndex("UserId");

                    b.ToTable("social_accounts");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Supplier", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("note");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone");

                    b.HasKey("Id")
                        .HasName("PK__supplier__3213E83FC084036E");

                    b.ToTable("suppliers");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.SupplierIngredientPrice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("EffectiveDate")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("effective_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ExpiredDate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("expired_date");

                    b.Property<long>("IngredientId")
                        .HasColumnType("bigint")
                        .HasColumnName("ingredient_id");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("price");

                    b.Property<long>("SupplierId")
                        .HasColumnType("bigint")
                        .HasColumnName("supplier_id");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("unit");

                    b.HasKey("Id")
                        .HasName("PK__supplier__3213E83F441DA26C");

                    b.HasIndex("IngredientId");

                    b.HasIndex("SupplierId");

                    b.ToTable("supplier_ingredient_prices");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Taxes", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(5, 2)")
                        .HasColumnName("tax_rate");

                    b.HasKey("Id")
                        .HasName("PK__taxes__3213E83FACB47953");

                    b.ToTable("taxes");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Token", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime?>("ExpirationDate")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("expiration_date");

                    b.Property<bool>("Expired")
                        .HasColumnType("bit")
                        .HasColumnName("expired");

                    b.Property<bool>("Revoked")
                        .HasColumnType("bit")
                        .HasColumnName("revoked");

                    b.Property<string>("Token1")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("token");

                    b.Property<string>("TokenType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token_type");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("PK__tokens__3213E83F593BCD93");

                    b.HasIndex("UserId");

                    b.ToTable("tokens");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("address");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("created_at")
                        .HasDefaultValueSql("(sysdatetime())");

                    b.Property<DateOnly?>("DateOfBirth")
                        .HasColumnType("date")
                        .HasColumnName("date_of_birth");

                    b.Property<long?>("EmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("employee_id");

                    b.Property<long?>("FacebookAccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("facebook_account_id");

                    b.Property<string>("Fullname")
                        .HasMaxLength(100)
                        .IsUnicode(true)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("fullname");

                    b.Property<long?>("GoogleAccountId")
                        .HasColumnType("bigint")
                        .HasColumnName("google_account_id");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true)
                        .HasColumnName("is_active");

                    b.Property<DateTime>("LastModified")
                        .HasPrecision(6)
                        .HasColumnType("datetime2(6)")
                        .HasColumnName("last_modified");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("password");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("phone_number");

                    b.Property<long>("RoleId")
                        .HasColumnType("bigint")
                        .HasColumnName("role_id");

                    b.HasKey("Id")
                        .HasName("PK__users__3213E83F62990E3B");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("RoleId");

                    b.ToTable("users");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.BranchExpense", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Branch", "Branch")
                        .WithMany("BranchExpenses")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_branch_expenses_branches");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.BranchIngredientInventory", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Branch", "Branch")
                        .WithMany("BranchIngredientInventories")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_bii_branch");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("BranchIngredientInventories")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_bii_ingredient");

                    b.Navigation("Branch");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Customer", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.User", "User")
                        .WithMany("Customers")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_customers_users");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Employee", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Branch", "Branch")
                        .WithMany("Employees")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_employees_branch");

                    b.Navigation("Branch");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.EmployeeSalary", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Employee", "Employee")
                        .WithMany("EmployeeSalaries")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_salaries_employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.EmployeeShift", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Employee", "Employee")
                        .WithMany("EmployeeShifts")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_shifts_employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Ingredient", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.IngredientCategory", "Category")
                        .WithMany("Ingredients")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Taxes", "Tax")
                        .WithMany("Ingredients")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK_ingredients_taxes");

                    b.Navigation("Category");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrder", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Supplier", "Supplier")
                        .WithMany("IngredientPurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .HasConstraintName("FK_purchase_order_supplier");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrderDetail", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientPurchaseOrderDetails")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_ipod_ingredients");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrder", "PurchaseOrder")
                        .WithMany("IngredientPurchaseOrderDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .IsRequired()
                        .HasConstraintName("FK_ipod_purchase_orders");

                    b.Navigation("Ingredient");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientTransfer", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Branch", "Branch")
                        .WithMany("IngredientTransfers")
                        .HasForeignKey("BranchId")
                        .IsRequired()
                        .HasConstraintName("FK_transfer_branch");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientTransfers")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_transfer_ingredient");

                    b.Navigation("Branch");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientWarehouse", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("IngredientWarehouses")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_ingredient_warehouse");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Order", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Branch", "Branch")
                        .WithMany("Orders")
                        .HasForeignKey("BranchId")
                        .HasConstraintName("FK_orders_branches");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .IsRequired()
                        .HasConstraintName("FK_orders_customers");

                    b.Navigation("Branch");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.OrderDeliveryTracking", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Employee", "DeliveryPerson")
                        .WithMany("OrderDeliveryTrackings")
                        .HasForeignKey("DeliveryPersonId")
                        .HasConstraintName("FK_tracking_employees");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Order", "Order")
                        .WithMany("OrderDeliveryTrackings")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK_tracking_orders");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.ShippingProvider", "ShippingProvider")
                        .WithMany("OrderDeliveryTrackings")
                        .HasForeignKey("ShippingProviderId")
                        .HasConstraintName("FK_tracking_providers");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.DeliveryStatus", "Status")
                        .WithMany("OrderDeliveryTrackings")
                        .HasForeignKey("StatusId")
                        .IsRequired()
                        .HasConstraintName("FK_tracking_status");

                    b.Navigation("DeliveryPerson");

                    b.Navigation("Order");

                    b.Navigation("ShippingProvider");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.OrderDetail", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .HasConstraintName("FKjyu2qbqt8gnvno9oe9j2s2ldk");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK4q98utpd73imf4yhttm3w0eax");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Payroll", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Employee", "Employee")
                        .WithMany("Payrolls")
                        .HasForeignKey("EmployeeId")
                        .IsRequired()
                        .HasConstraintName("FK_payroll_employee");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Product", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_products_categories");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Taxes", "Tax")
                        .WithMany("Products")
                        .HasForeignKey("TaxId")
                        .HasConstraintName("FK_products_taxes");

                    b.Navigation("Category");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ProductImage", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FKqnq71xsohugpqwf3c9gxmsuy");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ProductRecipe", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("ProductRecipes")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_recipe_ingredient");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Product", "Product")
                        .WithMany("ProductRecipes")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK_recipe_product");

                    b.Navigation("Ingredient");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.SocialAccount", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.User", "User")
                        .WithMany("SocialAccounts")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK6rmxxiton5yuvu7ph2hcq2xn7");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.SupplierIngredientPrice", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Ingredient", "Ingredient")
                        .WithMany("SupplierIngredientPrices")
                        .HasForeignKey("IngredientId")
                        .IsRequired()
                        .HasConstraintName("FK_sip_ingredient");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Supplier", "Supplier")
                        .WithMany("SupplierIngredientPrices")
                        .HasForeignKey("SupplierId")
                        .IsRequired()
                        .HasConstraintName("FK_sip_supplier");

                    b.Navigation("Ingredient");

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Token", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK2dylsfo39lgjyqml2tbe0b0ss");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.User", b =>
                {
                    b.HasOne("Dashboard.DataAccess.Models.Entities.Employee", "Employee")
                        .WithMany("Users")
                        .HasForeignKey("EmployeeId")
                        .HasConstraintName("FK_users_employees");

                    b.HasOne("Dashboard.DataAccess.Models.Entities.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .IsRequired()
                        .HasConstraintName("FK_users_roles");

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Branch", b =>
                {
                    b.Navigation("BranchExpenses");

                    b.Navigation("BranchIngredientInventories");

                    b.Navigation("Employees");

                    b.Navigation("IngredientTransfers");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.DeliveryStatus", b =>
                {
                    b.Navigation("OrderDeliveryTrackings");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Employee", b =>
                {
                    b.Navigation("EmployeeSalaries");

                    b.Navigation("EmployeeShifts");

                    b.Navigation("OrderDeliveryTrackings");

                    b.Navigation("Payrolls");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Ingredient", b =>
                {
                    b.Navigation("BranchIngredientInventories");

                    b.Navigation("IngredientPurchaseOrderDetails");

                    b.Navigation("IngredientTransfers");

                    b.Navigation("IngredientWarehouses");

                    b.Navigation("ProductRecipes");

                    b.Navigation("SupplierIngredientPrices");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientCategory", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.IngredientPurchaseOrder", b =>
                {
                    b.Navigation("IngredientPurchaseOrderDetails");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Order", b =>
                {
                    b.Navigation("OrderDeliveryTrackings");

                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Product", b =>
                {
                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");

                    b.Navigation("ProductRecipes");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.ShippingProvider", b =>
                {
                    b.Navigation("OrderDeliveryTrackings");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Supplier", b =>
                {
                    b.Navigation("IngredientPurchaseOrders");

                    b.Navigation("SupplierIngredientPrices");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.Taxes", b =>
                {
                    b.Navigation("Ingredients");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("Dashboard.DataAccess.Models.Entities.User", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("SocialAccounts");

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
