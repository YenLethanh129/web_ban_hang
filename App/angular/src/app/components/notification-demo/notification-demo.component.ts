import { Component } from '@angular/core';
import { CommonModule } from '@angular/common';
import { MatButtonModule } from '@angular/material/button';
import { MatCardModule } from '@angular/material/card';
import { MatIconModule } from '@angular/material/icon';
import { MatDividerModule } from '@angular/material/divider';
import { NotificationService } from '../../services/notification.service';

@Component({
  selector: 'app-notification-demo',
  standalone: true,
  imports: [
    CommonModule,
    MatButtonModule,
    MatCardModule,
    MatIconModule,
    MatDividerModule
  ],
  template: `
    <div class="demo-container">
      <mat-card class="demo-card">
        <mat-card-header>
          <mat-card-title>üéØ Demo Th√¥ng B√°o Th√¢n Thi·ªán</mat-card-title>
          <mat-card-subtitle>B·∫•m v√†o c√°c n√∫t ƒë·ªÉ xem c√°c lo·∫°i th√¥ng b√°o kh√°c nhau</mat-card-subtitle>
        </mat-card-header>
        
        <mat-card-content>
          <div class="section">
            <h3>üé® C√°c Lo·∫°i Th√¥ng B√°o</h3>
            <div class="button-grid">
              <button mat-raised-button color="primary" (click)="showSuccess()">
                <mat-icon>check_circle</mat-icon>
                Th√†nh C√¥ng
              </button>
              
              <button mat-raised-button color="warn" (click)="showError()">
                <mat-icon>error</mat-icon>
                L·ªói
              </button>
              
              <button mat-raised-button color="accent" (click)="showInfo()">
                <mat-icon>info</mat-icon>
                Th√¥ng Tin
              </button>
              
              <button mat-raised-button color="warn" (click)="showWarning()">
                <mat-icon>warning</mat-icon>
                C·∫£nh B√°o
              </button>
              
              <button mat-raised-button color="primary" (click)="showConfirm()">
                <mat-icon>question_answer</mat-icon>
                X√°c Nh·∫≠n
              </button>
              
              <button mat-raised-button color="accent" (click)="showCustom()">
                <mat-icon>settings</mat-icon>
                T√πy Ch·ªânh
              </button>
            </div>
          </div>

          <mat-divider></mat-divider>

          <div class="section">
            <h3>üìç V·ªã Tr√≠ Hi·ªÉn Th·ªã</h3>
            <div class="button-grid">
              <button mat-raised-button color="primary" (click)="showLeft()">
                <mat-icon>align_horizontal_left</mat-icon>
                G√≥c Tr√°i
              </button>
              
              <button mat-raised-button color="accent" (click)="showCenter()">
                <mat-icon>center_focus_strong</mat-icon>
                Gi·ªØa
              </button>
              
              <button mat-raised-button color="primary" (click)="showRight()">
                <mat-icon>align_horizontal_right</mat-icon>
                G√≥c Ph·∫£i (M·∫∑c ƒë·ªãnh)
              </button>
              
              <button mat-raised-button color="accent" (click)="showBottom()">
                <mat-icon>vertical_align_bottom</mat-icon>
                D∆∞·ªõi C√πng
              </button>
            </div>
          </div>

          <mat-divider></mat-divider>

          <div class="section">
            <h3>üîß T√πy Ch·ªânh N√¢ng Cao</h3>
            <div class="button-grid">
              <button mat-raised-button color="primary" (click)="showCustomPosition()">
                <mat-icon>tune</mat-icon>
                V·ªã Tr√≠ T√πy Ch·ªânh
              </button>
              
              <button mat-raised-button color="accent" (click)="showLongDuration()">
                <mat-icon>schedule</mat-icon>
                Th·ªùi Gian D√†i
              </button>
              
              <button mat-raised-button color="primary" (click)="showNoAutoClose()">
                <mat-icon>pause_circle</mat-icon>
                Kh√¥ng T·ª± ƒê√≥ng
              </button>
            </div>
          </div>
          
          <div class="info-section">
            <h3>‚ú® T√≠nh nƒÉng c·ªßa h·ªá th·ªëng th√¥ng b√°o:</h3>
            <ul>
              <li>üé® Giao di·ªán ƒë·∫πp v·ªõi gradient v√† shadow</li>
              <li>üì± Responsive tr√™n m·ªçi thi·∫øt b·ªã</li>
              <li>‚ö° Animation m∆∞·ª£t m√†</li>
              <li>üéØ Th√¥ng b√°o th√¥ng minh theo lo·∫°i l·ªói HTTP</li>
              <li>üîß D·ªÖ d√†ng t√πy ch·ªânh v√† m·ªü r·ªông</li>
              <li>üí¨ H·ªó tr·ª£ emoji v√† icon</li>
              <li>üìç <strong>M·ªõi:</strong> T√πy ch·ªçn v·ªã tr√≠ hi·ªÉn th·ªã linh ho·∫°t</li>
            </ul>
          </div>
        </mat-card-content>
      </mat-card>
    </div>
  `,
  styles: [`
    .demo-container {
      padding: 20px;
      max-width: 900px;
      margin: 0 auto;
    }
    
    .demo-card {
      margin-bottom: 20px;
    }
    
    .section {
      margin: 30px 0;
    }
    
    .section h3 {
      color: #333;
      margin-bottom: 20px;
      display: flex;
      align-items: center;
      gap: 8px;
    }
    
    .button-grid {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
      gap: 16px;
      margin: 20px 0;
    }
    
    .button-grid button {
      height: 60px;
      font-size: 16px;
      font-weight: 500;
    }
    
    .button-grid mat-icon {
      margin-right: 8px;
    }
    
    .info-section {
      margin-top: 30px;
      padding: 20px;
      background: #f5f5f5;
      border-radius: 8px;
    }
    
    .info-section h3 {
      color: #333;
      margin-bottom: 16px;
    }
    
    .info-section ul {
      padding-left: 20px;
    }
    
    .info-section li {
      margin-bottom: 8px;
      color: #555;
    }
    
    .info-section strong {
      color: #1976d2;
    }
    
    @media (max-width: 600px) {
      .button-grid {
        grid-template-columns: 1fr;
      }
      
      .demo-container {
        padding: 10px;
      }
    }
  `]
})
export class NotificationDemoComponent {
  constructor(private notificationService: NotificationService) {}

  // C√°c lo·∫°i th√¥ng b√°o c∆° b·∫£n
  showSuccess() {
    this.notificationService.showSuccess('üéâ Thao t√°c th√†nh c√¥ng! B·∫°n ƒë√£ ho√†n th√†nh vi·ªác n√†y m·ªôt c√°ch xu·∫•t s·∫Øc!');
  }

  showError() {
    this.notificationService.showError('‚ùå C√≥ l·ªói x·∫£y ra! Vui l√≤ng ki·ªÉm tra l·∫°i v√† th·ª≠ l·∫°i sau.');
  }

  showInfo() {
    this.notificationService.showInfo('‚ÑπÔ∏è ƒê√¢y l√† th√¥ng tin quan tr·ªçng m√† b·∫°n c·∫ßn bi·∫øt.');
  }

  showWarning() {
    this.notificationService.showWarning('‚ö†Ô∏è C·∫£nh b√°o: H√£y c·∫©n th·∫≠n v·ªõi thao t√°c n√†y!');
  }

  showConfirm() {
    this.notificationService.showConfirm(
      'ü§î B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën th·ª±c hi·ªán h√†nh ƒë·ªông n√†y kh√¥ng?',
      'X√°c nh·∫≠n',
      'H·ªßy'
    ).subscribe(() => {
      this.notificationService.showSuccess('‚úÖ B·∫°n ƒë√£ x√°c nh·∫≠n h√†nh ƒë·ªông!');
    });
  }

  showCustom() {
    this.notificationService.showCustom(
      'üîß Th√¥ng b√°o t√πy ch·ªânh v·ªõi th·ªùi gian hi·ªÉn th·ªã d√†i h∆°n',
      'T√πy ch·ªânh',
      { duration: 8000 }
    );
  }

  // C√°c v·ªã tr√≠ hi·ªÉn th·ªã m·ªõi
  showLeft() {
    this.notificationService.showLeft('‚¨ÖÔ∏è Th√¥ng b√°o ·ªü g√≥c tr√°i!', 'info');
  }

  showCenter() {
    this.notificationService.showCenter('üéØ Th√¥ng b√°o ·ªü gi·ªØa m√†n h√¨nh!', 'success');
  }

  showRight() {
    this.notificationService.showRight('‚û°Ô∏è Th√¥ng b√°o ·ªü g√≥c ph·∫£i (m·∫∑c ƒë·ªãnh)!', 'info');
  }

  showBottom() {
    this.notificationService.showBottom('‚¨áÔ∏è Th√¥ng b√°o ·ªü d∆∞·ªõi c√πng!', 'warning');
  }

  // T√πy ch·ªânh n√¢ng cao
  showCustomPosition() {
    this.notificationService.showSuccess('üé® Th√¥ng b√°o t√πy ch·ªânh v·ªã tr√≠!', {
      horizontalPosition: 'start',
      verticalPosition: 'bottom',
      duration: 6000
    });
  }

  showLongDuration() {
    this.notificationService.showInfo('‚è∞ Th√¥ng b√°o hi·ªÉn th·ªã trong 10 gi√¢y!', {
      duration: 10000
    });
  }

  showNoAutoClose() {
    this.notificationService.showWarning('‚è∏Ô∏è Th√¥ng b√°o kh√¥ng t·ª± ƒë√≥ng - b·∫°n ph·∫£i b·∫•m "ƒê√≥ng"!', {
      duration: 0
    });
  }
}
